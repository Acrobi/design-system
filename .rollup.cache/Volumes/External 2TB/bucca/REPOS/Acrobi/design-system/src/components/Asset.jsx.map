{"version":3,"file":"Asset.jsx","sourceRoot":"","sources":["Asset.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAsset } from './AssetProvider.js';\nimport { cn } from '../lib/utils.js';\n\ninterface AssetProps {\n  metaphor: string;\n  className?: string;\n  alt?: string;\n  width?: number | string;\n  height?: number | string;\n  fallback?: React.ReactNode;\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\n/**\n * Universal Asset Component\n *\n * Renders assets based on metaphor with collection override support.\n * Automatically determines the appropriate tag based on asset type.\n */\nexport function Asset({\n  metaphor,\n  className,\n  alt,\n  width,\n  height,\n  fallback,\n  onLoad,\n  onError,\n}: AssetProps) {\n  const { asset, isLoading, error, hasAsset } = useAsset(metaphor);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div\n        className={cn(\n          'animate-pulse bg-muted rounded',\n          'flex items-center justify-center',\n          className\n        )}\n        style={{ width, height }}\n        role=\"img\"\n        aria-label={`Loading ${metaphor}`}\n      >\n        <div className=\"w-4 h-4 border-2 border-muted-foreground/20 border-t-muted-foreground rounded-full animate-spin\" />\n      </div>\n    );\n  }\n\n  // Error state\n  if (error || !hasAsset) {\n    if (fallback) {\n      return <>{fallback}</>;\n    }\n\n    return (\n      <div\n        className={cn(\n          'bg-muted border border-dashed border-muted-foreground/25 rounded',\n          'flex items-center justify-center text-muted-foreground text-sm',\n          className\n        )}\n        style={{ width, height }}\n        role=\"img\"\n        aria-label={`Missing ${metaphor}`}\n        title={error ? `Error: ${error}` : `No asset found for \"${metaphor}\"`}\n      >\n        <span className=\"text-xs\">?</span>\n      </div>\n    );\n  }\n\n  // Determine the appropriate tag based on asset type\n  const { url, type, filename } = asset!;\n\n  // SVG assets - use img tag for consistency\n  if (type === 'svg' || filename.endsWith('.svg')) {\n    return (\n      <img\n        src={url}\n        alt={alt || metaphor}\n        className={className}\n        width={width}\n        height={height}\n        onLoad={onLoad}\n        onError={onError}\n        style={{ width, height }}\n      />\n    );\n  }\n\n  // Image assets (png, jpg, webp, etc.)\n  if (type === 'image' || /\\.(png|jpe?g|webp|gif|avif)$/i.test(filename)) {\n    return (\n      <img\n        src={url}\n        alt={alt || metaphor}\n        className={cn('object-contain', className)}\n        width={width}\n        height={height}\n        onLoad={onLoad}\n        onError={onError}\n        style={{ width, height }}\n      />\n    );\n  }\n\n  // Icon assets - try to render as img first, fallback to div\n  if (type === 'icon') {\n    return (\n      <img\n        src={url}\n        alt={alt || metaphor}\n        className={cn('inline-block', className)}\n        width={width || 24}\n        height={height || 24}\n        onLoad={onLoad}\n        onError={(e) => {\n          // If img fails, try to load as SVG inline\n          if (filename && filename.endsWith('.svg') && url) {\n            fetchSvgInline(url, alt || metaphor || 'asset', className, width || 24, height || 24);\n          }\n          onError?.();\n        }}\n      />\n    );\n  }\n\n  // Default fallback for unknown types\n  return (\n    <img\n      src={url}\n      alt={alt || metaphor}\n      className={className}\n      width={width}\n      height={height}\n      onLoad={onLoad}\n      onError={onError}\n      style={{ width, height }}\n    />\n  );\n}\n\n/**\n * Helper function to load SVG inline (fallback for icon rendering)\n */\nfunction fetchSvgInline(\n  url: string,\n  alt: string,\n  className?: string,\n  width?: number | string,\n  height?: number | string\n) {\n  fetch(url)\n    .then(response => response.text())\n    .then(svgContent => {\n      // Create a temporary div to parse SVG\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = svgContent;\n      const svg = tempDiv.querySelector('svg');\n\n      if (svg) {\n        // Apply attributes to the SVG\n        svg.setAttribute('alt', alt);\n        svg.setAttribute('role', 'img');\n        svg.className.baseVal.add(className);\n        svg.setAttribute('width', String(width));\n        svg.setAttribute('height', String(height));\n\n        // Replace the image element with the SVG\n        const img = document.querySelector(`img[src=\"${url}\"]`);\n        if (img && img.parentNode) {\n          img.parentNode.replaceChild(svg, img);\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Failed to load SVG inline:', error);\n    });\n}\n\n/**\n * Asset component with built-in loading skeleton\n */\nexport function AssetWithSkeleton(props: AssetProps) {\n  return (\n    <div className=\"relative\">\n      <Asset {...props} />\n    </div>\n  );\n}\n\n/**\n * Simple asset component that returns null if no asset found\n */\nexport function OptionalAsset(props: AssetProps) {\n  const { hasAsset } = useAsset(props.metaphor);\n\n  if (!hasAsset) {\n    return null;\n  }\n\n  return <Asset {...props} />;\n}"]}