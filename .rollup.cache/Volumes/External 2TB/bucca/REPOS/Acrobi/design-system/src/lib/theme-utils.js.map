{"version":3,"file":"theme-utils.js","sourceRoot":"","sources":["theme-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Theme Utilities - Helper functions for theme management\n *\n * Updated for Tailwind CSS v4 with hex color support.\n * This file provides utilities for working with the updated design system\n * that uses hex colors and proper theme management.\n */\n\nimport { parseToRgba, toHex } from 'color2k';\n\n// ===================================\n// 🎨 THEME UTILITIES CONFIGURATION - TAILWIND v4\n// ===================================\n// 🚨 AI AGENT GUIDANCE:\n// - This file provides utilities for dynamic theme generation and management\n// - Updated for Tailwind CSS v4 hex color compatibility\n// - Uses color2k for color space conversions\n// - Follows the established 3-tier token system with hex values\n// - Includes theme management functions for light/dark mode\n// ===================================\n\n// Ramps define the saturation and lightness steps for palettes\nconst pRamp = [\n  { s: 0.16, l: 0.97 }, { s: 0.20, l: 0.94 }, { s: 0.25, l: 0.89 },\n  { s: 0.35, l: 0.83 }, { s: 0.50, l: 0.75 }, { s: 0.70, l: 0.65 },\n  { s: 0.75, l: 0.55 }, { s: 0.80, l: 0.45 }, { s: 0.85, l: 0.35 },\n  { s: 0.90, l: 0.25 }, { s: 0.95, l: 0.15 }\n];\n\nconst nRamp = [\n  { s: 0.0, l: 1.0 }, { s: 0.005, l: 0.985 }, { s: 0.006, l: 0.97 },\n  { s: 0.01, l: 0.922 }, { s: 0.015, l: 0.843 }, { s: 0.02, l: 0.708 },\n  { s: 0.023, l: 0.556 }, { s: 0.025, l: 0.439 }, { s: 0.025, l: 0.371 },\n  { s: 0.022, l: 0.269 }, { s: 0.018, l: 0.205 }, { s: 0.015, l: 0.145 }\n];\n\n// ===================================\n// 🎨 PALETTE GENERATION\n// ===================================\n// 🚨 AI AGENT GUIDANCE:\n// - Generates color palettes from base colors\n// - DO NOT modify the generation logic\n// - Uses proper color space conversions\n// ===================================\n\nfunction hslToHex(h: number, s: number, l: number): string {\n  // Convert HSL to RGB manually\n  const sNorm = s / 100;\n  const lNorm = l / 100;\n  const c = (1 - Math.abs(2 * lNorm - 1)) * sNorm;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = lNorm - c / 2;\n  let r = 0, g = 0, b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n\n  r = Math.round((r + m) * 255);\n  g = Math.round((g + m) * 255);\n  b = Math.round((b + m) * 255);\n\n  return toHex(`rgba(${r}, ${g}, ${b}, 1)`);\n}\n\nfunction generatePalette(baseColor: string, ramp: { s: number, l: number }[], tinted: boolean): string[] {\n  const rgba = parseToRgba(baseColor);\n  const r = rgba[0] / 255;\n  const g = rgba[1] / 255;\n  const b = rgba[2] / 255;\n\n  // Convert RGB to HSL\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0, s = 0, l = (max + min) / 2;\n\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r: h = ((g - b) / d + (g < b ? 6 : 0)) / 6; break;\n      case g: h = ((b - r) / d + 2) / 6; break;\n      case b: h = ((r - g) / d + 4) / 6; break;\n    }\n  }\n\n  h = Math.round(h * 360);\n\n  return ramp.map(step => {\n    return hslToHex(tinted ? h : 0, tinted ? step.s * 100 : 0, step.l * 100);\n  });\n}\n\n// ===================================\n// 🎨 SECONDARY COLOR SUGGESTIONS\n// ===================================\n\nexport const generateSecondaryColorSuggestions = () => {\n  // This is a placeholder for future functionality\n  // Removed unused parameter to satisfy linter\n  return [];\n};\n\n// ===================================\n// 🎨 THEME GENERATION FUNCTION\n// ===================================\n// 🚨 AI AGENT GUIDANCE:\n// - Generates complete theme objects from base colors\n// - Returns properly typed theme objects\n// - Auto-generates foreground colors for accessibility\n// ===================================\n\ninterface ThemeRecipe {\n  '--background': string;\n  '--foreground': string;\n  '--card': string;\n  '--card-foreground': string;\n  '--popover': string;\n  '--popover-foreground': string;\n  '--primary': string;\n  '--primary-foreground': string;\n  '--secondary': string;\n  '--secondary-foreground': string;\n  '--muted': string;\n  '--muted-foreground': string;\n  '--accent': string;\n  '--accent-foreground': string;\n  '--destructive': string;\n  '--destructive-foreground': string;\n  '--border': string;\n  '--input': string;\n  '--ring': string;\n  '--radius': string;\n}\n\ninterface GeneratedTheme {\n  light: ThemeRecipe;\n  dark: ThemeRecipe;\n}\n\nfunction getContrastColor(hexColor: string): string {\n  // Simple contrast calculation - could be enhanced\n  const rgba = parseToRgba(hexColor);\n  const r = rgba[0] / 255;\n  const g = rgba[1] / 255;\n  const b = rgba[2] / 255;\n  const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\n  return luminance > 0.5 ? 'var(--n950)' : 'var(--n50)';\n}\n\nexport function generateThemeFromColors({ primary, secondary, tinted }: { primary: string, secondary?: string, tinted: boolean }): GeneratedTheme {\n  const pPalette = generatePalette(primary, pRamp, true);\n  const nPalette = generatePalette(primary, nRamp, tinted);\n  const sPalette = secondary ? generatePalette(secondary, pRamp, true) : pPalette;\n\n  const lightRecipe: ThemeRecipe = {\n    '--background': nPalette[1],\n    '--foreground': nPalette[11],\n    '--card': nPalette[1],\n    '--card-foreground': nPalette[11],\n    '--popover': nPalette[1],\n    '--popover-foreground': nPalette[11],\n    '--primary': pPalette[5],\n    '--primary-foreground': getContrastColor(pPalette[5]),\n    '--secondary': sPalette[5],\n    '--secondary-foreground': getContrastColor(sPalette[5]),\n    '--muted': nPalette[2],\n    '--muted-foreground': nPalette[6],\n    '--accent': nPalette[2],\n    '--accent-foreground': getContrastColor(nPalette[2]),\n    '--destructive': 'var(--red-500)',\n    '--destructive-foreground': 'var(--n50)',\n    '--border': nPalette[3],\n    '--input': nPalette[3],\n    '--ring': pPalette[5],\n    '--radius': '0.5rem',\n  };\n\n  // Create inverted palettes for dark mode\n  const pPaletteDark = [...pPalette].reverse();\n  const nPaletteDark = [...nPalette].reverse();\n  const sPaletteDark = secondary ? [...sPalette].reverse() : pPaletteDark;\n\n  const darkRecipe: ThemeRecipe = {\n    '--background': nPaletteDark[1],\n    '--foreground': nPaletteDark[11],\n    '--card': nPaletteDark[1],\n    '--card-foreground': nPaletteDark[11],\n    '--popover': nPaletteDark[1],\n    '--popover-foreground': nPaletteDark[11],\n    '--primary': pPaletteDark[5],\n    '--primary-foreground': getContrastColor(pPaletteDark[5]),\n    '--secondary': sPaletteDark[5],\n    '--secondary-foreground': getContrastColor(sPaletteDark[5]),\n    '--muted': nPaletteDark[2],\n    '--muted-foreground': nPaletteDark[6],\n    '--accent': nPaletteDark[2],\n    '--accent-foreground': getContrastColor(nPaletteDark[2]),\n    '--destructive': 'var(--red-600)',\n    '--destructive-foreground': 'var(--n50)',\n    '--border': nPaletteDark[3],\n    '--input': nPaletteDark[3],\n    '--ring': pPaletteDark[5],\n    '--radius': '0.5rem',\n  };\n\n  return { light: lightRecipe, dark: darkRecipe };\n}\n\n// ===================================\n// 🎨 THEME MANAGEMENT FUNCTIONS - TAILWIND v4\n// ===================================\n// 🚨 AI AGENT GUIDANCE:\n// - Added theme management functions for v4 compatibility\n// - These functions work with the new hex-based color system\n// - Provides utilities for theme switching and color access\n// ===================================\n\n// Theme types\nexport type Theme = 'light' | 'dark' | 'system';\n\n// Color palette interface\nexport interface ColorPalette {\n  primary: string;\n  secondary: string;\n  accent: string;\n  muted: string;\n  destructive: string;\n  background: string;\n  foreground: string;\n  card: string;\n  border: string;\n  input: string;\n  ring: string;\n}\n\n/**\n * Get the current theme\n */\nexport function getTheme(): Theme {\n  if (typeof window === 'undefined') return 'system';\n\n  const html = document.documentElement;\n  if (html.classList.contains('dark')) return 'dark';\n  if (html.classList.contains('light')) return 'light';\n  return 'system';\n}\n\n/**\n * Set the theme\n */\nexport function setTheme(theme: Theme): void {\n  if (typeof window === 'undefined') return;\n\n  const html = document.documentElement;\n\n  // Remove existing theme classes\n  html.classList.remove('light', 'dark');\n\n  if (theme === 'system') {\n    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    html.classList.add(systemTheme);\n  } else {\n    html.classList.add(theme);\n  }\n\n  // Store preference\n  localStorage.setItem('theme', theme);\n}\n\n/**\n * Toggle between light and dark themes\n */\nexport function toggleTheme(): void {\n  const currentTheme = getTheme();\n  const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n  setTheme(newTheme);\n}\n\n/**\n * Initialize theme from localStorage or system preference\n */\nexport function initializeTheme(): void {\n  if (typeof window === 'undefined') return;\n\n  const storedTheme = localStorage.getItem('theme') as Theme;\n  const theme = storedTheme || 'system';\n  setTheme(theme);\n}\n\n/**\n * Get computed color value from CSS variable (hex format)\n */\nexport function getComputedColor(variableName: string): string {\n  if (typeof window === 'undefined') return '';\n\n  const computedStyle = getComputedStyle(document.documentElement);\n  return computedStyle.getPropertyValue(variableName).trim();\n}\n\n/**\n * Get current theme colors (hex format)\n */\nexport function getCurrentThemeColors(): ColorPalette {\n  return {\n    primary: getComputedColor('--primary'),\n    secondary: getComputedColor('--secondary'),\n    accent: getComputedColor('--accent'),\n    muted: getComputedColor('--muted'),\n    destructive: getComputedColor('--destructive'),\n    background: getComputedColor('--background'),\n    foreground: getComputedColor('--foreground'),\n    card: getComputedColor('--card'),\n    border: getComputedColor('--border'),\n    input: getComputedColor('--input'),\n    ring: getComputedColor('--ring'),\n  };\n}\n\n/**\n * Check if color is light (for text contrast) - works with hex\n */\nexport function isLightColor(hexColor: string): boolean {\n  if (!hexColor.startsWith('#')) {\n    // If it's not a hex color, check if it's a CSS variable\n    if (hexColor.startsWith('var(')) {\n      return false; // Default to dark for CSS variables\n    }\n    return false;\n  }\n\n  const rgb = parseToRgba(hexColor);\n  if (!rgb) return false;\n\n  const [r, g, b] = rgb;\n  const brightness = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  return brightness > 155;\n}\n\n/**\n * Generate accessible text color based on background (hex format)\n */\nexport function getContrastColor(backgroundColor: string): string {\n  return isLightColor(backgroundColor) ? 'var(--n950)' : 'var(--n50)';\n}\n\n/**\n * Color utility class for hex color operations (Tailwind v4 compatible)\n */\nexport class ColorUtils {\n  /**\n   * Convert hex to RGB\n   */\n  static hexToRgb(hex: string): { r: number; g: number; b: number } | null {\n    if (!hex.startsWith('#')) return null;\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n  }\n\n  /**\n   * Convert RGB to hex\n   */\n  static rgbToHex(r: number, g: number, b: number): string {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  }\n\n  /**\n   * Get color brightness value (hex format)\n   */\n  static getBrightness(hex: string): number {\n    const rgb = this.hexToRgb(hex);\n    if (!rgb) return 0;\n\n    return ((rgb.r * 299) + (rgb.g * 587) + (rgb.b * 114)) / 1000;\n  }\n\n  /**\n   * Check if two colors have sufficient contrast\n   */\n  static hasContrast(color1: string, color2: string, ratio: number = 4.5): boolean {\n    const brightness1 = this.getBrightness(color1);\n    const brightness2 = this.getBrightness(color2);\n\n    const lighter = Math.max(brightness1, brightness2);\n    const darker = Math.min(brightness1, brightness2);\n\n    return (lighter + 5) / (darker + 5) >= ratio;\n  }\n\n  /**\n   * Validate hex color format\n   */\n  static isValidHex(hex: string): boolean {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(hex);\n  }\n\n  /**\n   * Ensure color is in hex format for Tailwind v4\n   */\n  static ensureHex(color: string): string {\n    if (this.isValidHex(color)) return color;\n\n    // If it's a CSS variable, return as-is\n    if (color.startsWith('var(')) return color;\n\n    // Try to convert from other formats (basic implementation)\n    if (color.startsWith('rgb')) {\n      const rgb = parseToRgba(color);\n      if (rgb) {\n        return this.rgbToHex(rgb[0], rgb[1], rgb[2]);\n      }\n    }\n\n    return color; // Return original if conversion fails\n  }\n}\n\n/**\n * Theme context value for React Context\n */\nexport interface ThemeContextValue {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n  colors: ColorPalette;\n  isDark: boolean;\n}\n\n/**\n * Hook for theme management (if using React Context)\n */\nexport function useThemeHook(theme: Theme, setTheme: (theme: Theme) => void): ThemeContextValue {\n  const toggleTheme = () => {\n    const newTheme = theme === 'dark' ? 'light' : 'dark';\n    setTheme(newTheme);\n  };\n\n  const colors = getCurrentThemeColors();\n  const isDark = theme === 'dark';\n\n  return {\n    theme,\n    setTheme,\n    toggleTheme,\n    colors,\n    isDark,\n  };\n}\n\n/**\n * CSS custom property names for all color tokens (v4 compatible)\n */\nexport const CSS_VARIABLES = {\n  // Semantic colors\n  BACKGROUND: '--background',\n  FOREGROUND: '--foreground',\n  PRIMARY: '--primary',\n  PRIMARY_FOREGROUND: '--primary-foreground',\n  SECONDARY: '--secondary',\n  SECONDARY_FOREGROUND: '--secondary-foreground',\n  ACCENT: '--accent',\n  ACCENT_FOREGROUND: '--accent-foreground',\n  MUTED: '--muted',\n  MUTED_FOREGROUND: '--muted-foreground',\n  DESTRUCTIVE: '--destructive',\n  DESTRUCTIVE_FOREGROUND: '--destructive-foreground',\n  CARD: '--card',\n  CARD_FOREGROUND: '--card-foreground',\n  POPOVER: '--popover',\n  POPOVER_FOREGROUND: '--popover-foreground',\n  BORDER: '--border',\n  INPUT: '--input',\n  RING: '--ring',\n\n  // Chart colors\n  CHART_1: '--chart-1',\n  CHART_2: '--chart-2',\n  CHART_3: '--chart-3',\n  CHART_4: '--chart-4',\n  CHART_5: '--chart-5',\n} as const;\n\n// ===================================\n// 🎨 TAILWIND v4 COLOR VALIDATION\n// ===================================\n// 🚨 AI AGENT GUIDANCE:\n// - Functions to validate color format compatibility\n// - Ensures all colors are hex format for v4 compatibility\n// ===================================\n\n/**\n * Validate that all theme colors are in hex format\n */\nexport function validateThemeColors(): boolean {\n  const colors = getCurrentThemeColors();\n  let allValid = true;\n\n  Object.values(colors).forEach(color => {\n    if (color && !color.startsWith('var(') && !ColorUtils.isValidHex(color)) {\n      console.warn(`Invalid hex color format: ${color}`);\n      allValid = false;\n    }\n  });\n\n  return allValid;\n}\n\n/**\n * Get theme compatibility report\n */\nexport function getThemeCompatibilityReport(): {\n  isCompatible: boolean;\n  issues: string[];\n  recommendations: string[];\n} {\n  const issues: string[] = [];\n  const recommendations: string[] = [];\n\n  // Check if colors are in hex format\n  const colors = getCurrentThemeColors();\n  Object.entries(colors).forEach(([key, value]) => {\n    if (value && !value.startsWith('var(') && !ColorUtils.isValidHex(value)) {\n      issues.push(`Color ${key} is not in hex format: ${value}`);\n    }\n  });\n\n  // Check for @theme block availability\n  if (typeof window !== 'undefined') {\n    const computedStyle = getComputedStyle(document.documentElement);\n    const hasThemeColors = computedStyle.getPropertyValue('--color-background').trim() !== '';\n\n    if (!hasThemeColors) {\n      issues.push('@theme block colors not available');\n      recommendations.push('Ensure @theme block is properly configured in globals.css');\n    }\n  }\n\n  // Recommendations for v4 compatibility\n  recommendations.push('Use semantic tokens in components instead of hard-coded colors');\n  recommendations.push('Test theme switching in both light and dark modes');\n  recommendations.push('Verify color contrast meets accessibility standards');\n\n  return {\n    isCompatible: issues.length === 0,\n    issues,\n    recommendations,\n  };\n}"]}