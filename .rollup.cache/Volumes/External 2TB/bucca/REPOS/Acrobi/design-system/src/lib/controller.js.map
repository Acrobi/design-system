{"version":3,"file":"controller.js","sourceRoot":"","sources":["controller.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Architectural Standards: Controller Pattern for Complex Components\n *\n * This file implements the controller pattern for managing complex component state\n * following architectural standards with separation of concerns.\n */\n\nimport { useState, useCallback, useEffect, useRef } from 'react';\nimport { ComponentController } from './types';\n\n// Generic controller hook for complex components\nexport function useController<T extends Record<string, any>>(\n  initialState: T,\n  options?: {\n    onChange?: (state: T) => void;\n    onValidate?: (state: T) => boolean;\n    persistKey?: string;\n  }\n): ComponentController<T> {\n  const [state, setState] = useState<T>(() => {\n    // Load persisted state if key is provided\n    if (options?.persistKey) {\n      try {\n        const persisted = localStorage.getItem(options.persistKey);\n        if (persisted) {\n          return { ...initialState, ...JSON.parse(persisted) };\n        }\n      } catch (error) {\n        console.warn('Failed to load persisted state:', error);\n      }\n    }\n    return initialState;\n  });\n\n  // Persist state when it changes\n  useEffect(() => {\n    if (options?.persistKey) {\n      try {\n        localStorage.setItem(options.persistKey, JSON.stringify(state));\n      } catch (error) {\n        console.warn('Failed to persist state:', error);\n      }\n    }\n  }, [state, options?.persistKey]);\n\n  // Call onChange callback when state changes\n  useEffect(() => {\n    if (options?.onChange) {\n      options.onChange(state);\n    }\n  }, [state, options?.onChange]);\n\n  const update = useCallback((updates: Partial<T>) => {\n    setState(prevState => {\n      const newState = { ...prevState, ...updates };\n\n      // Validate new state if validator is provided\n      if (options?.onValidate && !options.onValidate(newState)) {\n        console.warn('State validation failed, not updating');\n        return prevState;\n      }\n\n      return newState;\n    });\n  }, [options?.onValidate]);\n\n  const reset = useCallback(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return {\n    state,\n    actions: {\n      update,\n      reset\n    },\n    hooks: {\n      onChange: options?.onChange,\n      onValidate: options?.onValidate\n    }\n  };\n}\n\n// Button controller for managing button state\nexport function useButtonController(initialState?: {\n  loading?: boolean;\n  disabled?: boolean;\n  clicked?: boolean;\n}) {\n  return useController({\n    loading: false,\n    disabled: false,\n    clicked: false,\n    ...initialState\n  }, {\n    onChange: (state) => {\n      // Auto-disable button when loading\n      if (state.loading && !state.disabled) {\n        state.disabled = true;\n      } else if (!state.loading && state.disabled && initialState?.disabled !== true) {\n        state.disabled = false;\n      }\n    }\n  });\n}\n\n// Form controller for managing form state\nexport function useFormController<T extends Record<string, any>>(\n  initialValues: T,\n  options?: {\n    onSubmit?: (values: T) => void | Promise<void>;\n    onValidate?: (values: T) => Record<string, string> | null;\n    resetOnSubmit?: boolean;\n  }\n) {\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const submitCountRef = useRef(0);\n\n  const controller = useController(initialValues, {\n    onChange: (state) => {\n      setIsDirty(true);\n      // Clear errors when user starts typing\n      if (errors && Object.keys(errors).length > 0) {\n        setErrors({});\n      }\n    }\n  });\n\n  const validate = useCallback((values: T) => {\n    if (options?.onValidate) {\n      const validationErrors = options.onValidate(values);\n      setErrors(validationErrors || {});\n      return !validationErrors || Object.keys(validationErrors).length === 0;\n    }\n    return true;\n  }, [options?.onValidate]);\n\n  const submit = useCallback(async () => {\n    if (isSubmitting) return;\n\n    const isValid = validate(controller.state);\n    if (!isValid) {\n      submitCountRef.current++;\n      return;\n    }\n\n    setIsSubmitting(true);\n    submitCountRef.current++;\n\n    try {\n      await options?.onSubmit?.(controller.state);\n\n      if (options?.resetOnSubmit) {\n        controller.actions.reset();\n        setIsDirty(false);\n      }\n    } catch (error) {\n      console.error('Form submission error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [controller, validate, isSubmitting, options]);\n\n  const reset = useCallback(() => {\n    controller.actions.reset();\n    setErrors({});\n    setIsDirty(false);\n    submitCountRef.current = 0;\n  }, [controller]);\n\n  return {\n    ...controller,\n    formState: {\n      errors,\n      isSubmitting,\n      isDirty,\n      submitCount: submitCountRef.current,\n      isValid: Object.keys(errors).length === 0\n    },\n    formActions: {\n      submit,\n      reset,\n      validate,\n      setErrors\n    }\n  };\n}\n\n// Theme controller for managing theme state\nexport function useThemeController(initialTheme?: string) {\n  return useController({\n    theme: initialTheme || 'system',\n    resolvedTheme: 'light',\n    isDark: false\n  }, {\n    onChange: (state) => {\n      // Apply theme to document\n      document.documentElement.setAttribute('data-theme', state.theme);\n      document.documentElement.classList.toggle('dark', state.isDark);\n    }\n  });\n}\n\n// List controller for managing list/table state\nexport function useListController<T>(\n  items: T[],\n  options?: {\n    sortBy?: keyof T;\n    sortOrder?: 'asc' | 'desc';\n    filter?: (item: T) => boolean;\n    itemsPerPage?: number;\n  }\n) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedItems, setSelectedItems] = useState<T[]>([]);\n\n  const controller = useController({\n    sortBy: options?.sortBy || null,\n    sortOrder: options?.sortOrder || 'asc',\n    filter: options?.filter || null,\n    searchQuery: ''\n  });\n\n  // Apply filters and sorting\n  const processedItems = items.filter(item => {\n    if (controller.state.filter && !controller.state.filter(item)) {\n      return false;\n    }\n    if (controller.state.searchQuery) {\n      // Simple search implementation - can be customized\n      const searchLower = controller.state.searchQuery.toLowerCase();\n      return JSON.stringify(item).toLowerCase().includes(searchLower);\n    }\n    return true;\n  }).sort((a, b) => {\n    if (!controller.state.sortBy) return 0;\n\n    const aValue = a[controller.state.sortBy];\n    const bValue = b[controller.state.sortBy];\n\n    if (aValue === bValue) return 0;\n\n    const comparison = aValue < bValue ? -1 : 1;\n    return controller.state.sortOrder === 'desc' ? -comparison : comparison;\n  });\n\n  // Pagination\n  const itemsPerPage = options?.itemsPerPage || 10;\n  const totalPages = Math.ceil(processedItems.length / itemsPerPage);\n  const paginatedItems = processedItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const toggleSelection = useCallback((item: T) => {\n    setSelectedItems(prev =>\n      prev.includes(item)\n        ? prev.filter(i => i !== item)\n        : [...prev, item]\n    );\n  }, []);\n\n  const selectAll = useCallback(() => {\n    setSelectedItems(paginatedItems);\n  }, [paginatedItems]);\n\n  const clearSelection = useCallback(() => {\n    setSelectedItems([]);\n  }, []);\n\n  return {\n    ...controller,\n    listState: {\n      items: processedItems,\n      paginatedItems,\n      currentPage,\n      totalPages,\n      selectedItems,\n      isAllSelected: paginatedItems.length > 0 && paginatedItems.every(item => selectedItems.includes(item)),\n      isPartiallySelected: selectedItems.length > 0 && !paginatedItems.every(item => selectedItems.includes(item))\n    },\n    listActions: {\n      setCurrentPage,\n      toggleSelection,\n      selectAll,\n      clearSelection,\n      setFilter: (filter: (item: T) => boolean) => controller.actions.update({ filter }),\n      setSortBy: (sortBy: keyof T) => controller.actions.update({ sortBy }),\n      toggleSortOrder: () => controller.actions.update({\n        sortOrder: controller.state.sortOrder === 'asc' ? 'desc' : 'asc'\n      }),\n      setSearchQuery: (searchQuery: string) => controller.actions.update({ searchQuery })\n    }\n  };\n}\n\n// Controller factory for creating custom controllers\nexport function createController<T extends Record<string, any>>(\n  initialState: T,\n  middleware?: Array<(state: T, updates: Partial<T>) => Partial<T> | null>\n) {\n  return function useCustomController(options?: {\n    onChange?: (state: T) => void;\n    onValidate?: (state: T) => boolean;\n  }) {\n    const [state, setState] = useState(initialState);\n\n    const update = useCallback((updates: Partial<T>) => {\n      setState(prevState => {\n        let newState = { ...prevState, ...updates };\n\n        // Apply middleware\n        if (middleware) {\n          for (const middlewareFn of middleware) {\n            const result = middlewareFn(newState, updates);\n            if (result) {\n              newState = { ...newState, ...result };\n            }\n          }\n        }\n\n        // Validate new state\n        if (options?.onValidate && !options.onValidate(newState)) {\n          console.warn('State validation failed, not updating');\n          return prevState;\n        }\n\n        return newState;\n      });\n    }, [options?.onValidate]);\n\n    const reset = useCallback(() => {\n      setState(initialState);\n    }, [initialState]);\n\n    return {\n      state,\n      actions: { update, reset },\n      hooks: {\n        onChange: options?.onChange,\n        onValidate: options?.onValidate\n      }\n    };\n  };\n}"]}