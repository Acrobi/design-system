{"version":3,"file":"button.test.jsx","sourceRoot":"","sources":["button.test.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,8CAA8C;AAC9C,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,kBAAkB,EAAE,CAAC;AAEvE,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,UAAU,CAAC,GAAG,EAAE;QACd,cAAc,CAAC,SAAS,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,cAAc,CAAC,SAAS,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,MAAM,kBAAkB,GAAG,CAAC,SAA6B,EAAE,EAAE;QAC3D,OAAO,MAAM,CACX,CAAC,eAAe,CACd;QAAA,CAAC,SAAS,CACZ;MAAA,EAAE,eAAe,CAAC,CACnB,CAAC;IACJ,CAAC,CAAC;IAEF,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,kBAAkB,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YACjE,MAAM,CAAC,MAAM,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,YAAY,EAAE,yBAAyB,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,kBAAkB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YACrE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,kBAAkB,CAChB,CAAC,MAAM,CAAC,OAAO,CACb;UAAA,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAChC;QAAA,EAAE,MAAM,CAAC,CACV,CAAC;YACF,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAC;YAChE,MAAM,CAAC,IAAI,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;YACrC,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YAClE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,gBAAgB,EAAE,6BAA6B,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;YAC/D,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;YACnC,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,cAAc,EAAE,2BAA2B,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;YAC/B,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,iBAAiB,EAAE,8BAA8B,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;YACzD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;QACrB,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;YAC5D,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC5B,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oBAAoB,EAAE,GAAG,EAAE;YAC5B,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;YACrD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;YAC3B,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;YACpD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,kBAAkB,CAAC,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,CAAC;YACvD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,kBAAkB,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;YACvD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,8BAA8B,EAAE,qBAAqB,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,kBAAkB,CAChB,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,mBAAmB,CAChE;;QACF,EAAE,MAAM,CAAC,CACV,CAAC;YACF,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC9B,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;YAEpE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,MAAM,CAAC,WAAW,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;YACzC,kBAAkB,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;YAE9C,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,MAAM,CAAC,cAAc,CAAC,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;YAC9B,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;YAEpE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACvC,MAAM,CAAC,cAAc,CAAC,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;YAClE,kBAAkB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE1C,6DAA6D;YAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;YAEtD,2CAA2C;YAC3C,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACxD,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACzD,kBAAkB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;YACzD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE1C,wDAAwD;YACxD,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { render, screen } from '@testing-library/react';\nimport { Button } from '../button';\nimport { SensoryProvider } from '../sensory-provider';\n\n// Mock console.log for sensory feedback tests\nconst mockConsoleLog = jest.spyOn(console, 'log').mockImplementation();\n\ndescribe('Button Component', () => {\n  beforeEach(() => {\n    mockConsoleLog.mockClear();\n  });\n\n  afterEach(() => {\n    mockConsoleLog.mockClear();\n  });\n\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <SensoryProvider>\n        {component}\n      </SensoryProvider>\n    );\n  };\n\n  describe('Rendering', () => {\n    it('renders a default button', () => {\n      renderWithProvider(<Button>Click me</Button>);\n      const button = screen.getByRole('button', { name: /click me/i });\n      expect(button).toBeInTheDocument();\n      expect(button).toHaveClass('bg-primary', 'text-primary-foreground');\n    });\n\n    it('renders with custom className', () => {\n      renderWithProvider(<Button className=\"custom-class\">Button</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('custom-class');\n    });\n\n    it('renders as child when asChild is true', () => {\n      renderWithProvider(\n        <Button asChild>\n          <a href=\"/test\">Link Button</a>\n        </Button>\n      );\n      const link = screen.getByRole('link', { name: /link button/i });\n      expect(link).toBeInTheDocument();\n    });\n  });\n\n  describe('Variants', () => {\n    it('renders destructive variant', () => {\n      renderWithProvider(<Button variant=\"destructive\">Delete</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('bg-destructive', 'text-destructive-foreground');\n    });\n\n    it('renders outline variant', () => {\n      renderWithProvider(<Button variant=\"outline\">Outline</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('border', 'border-input', 'bg-background');\n    });\n\n    it('renders secondary variant', () => {\n      renderWithProvider(<Button variant=\"secondary\">Secondary</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('bg-secondary', 'text-secondary-foreground');\n    });\n\n    it('renders ghost variant', () => {\n      renderWithProvider(<Button variant=\"ghost\">Ghost</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('hover:bg-accent', 'hover:text-accent-foreground');\n    });\n\n    it('renders link variant', () => {\n      renderWithProvider(<Button variant=\"link\">Link</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('text-primary', 'underline-offset-4');\n    });\n  });\n\n  describe('Sizes', () => {\n    it('renders default size', () => {\n      renderWithProvider(<Button size=\"default\">Default</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('h-10', 'px-4', 'py-2');\n    });\n\n    it('renders small size', () => {\n      renderWithProvider(<Button size=\"sm\">Small</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('h-9', 'px-3');\n    });\n\n    it('renders large size', () => {\n      renderWithProvider(<Button size=\"lg\">Large</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('h-11', 'px-8');\n    });\n\n    it('renders icon size', () => {\n      renderWithProvider(<Button size=\"icon\">🎨</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveClass('h-10', 'w-10');\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('has proper button attributes', () => {\n      renderWithProvider(<Button>Accessible Button</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toHaveAttribute('type', 'button');\n    });\n\n    it('supports disabled state', () => {\n      renderWithProvider(<Button disabled>Disabled</Button>);\n      const button = screen.getByRole('button');\n      expect(button).toBeDisabled();\n      expect(button).toHaveClass('disabled:pointer-events-none', 'disabled:opacity-50');\n    });\n\n    it('supports custom HTML attributes', () => {\n      renderWithProvider(\n        <Button data-testid=\"custom-button\" aria-label=\"Custom aria label\">\n          Button\n        </Button>\n      );\n      const button = screen.getByRole('button');\n      expect(button).toHaveAttribute('data-testid', 'custom-button');\n      expect(button).toHaveAttribute('aria-label', 'Custom aria label');\n    });\n  });\n\n  describe('Interactions', () => {\n    it('calls onClick handler when clicked', () => {\n      const handleClick = jest.fn();\n      renderWithProvider(<Button onClick={handleClick}>Click me</Button>);\n\n      const button = screen.getByRole('button');\n      button.click();\n\n      expect(handleClick).toHaveBeenCalledTimes(1);\n    });\n\n    it('plays sound effect when clicked', () => {\n      renderWithProvider(<Button>Click me</Button>);\n\n      const button = screen.getByRole('button');\n      button.click();\n\n      expect(mockConsoleLog).toHaveBeenCalledWith('SFX: Playing sound \"click\"');\n    });\n\n    it('handles click events with sensory feedback', () => {\n      const handleClick = jest.fn();\n      renderWithProvider(<Button onClick={handleClick}>Click me</Button>);\n\n      const button = screen.getByRole('button');\n      button.click();\n\n      expect(handleClick).toHaveBeenCalled();\n      expect(mockConsoleLog).toHaveBeenCalledWith('SFX: Playing sound \"click\"');\n    });\n  });\n\n  describe('CSS Variables Compliance', () => {\n    it('uses semantic CSS variables instead of hard-coded colors', () => {\n      renderWithProvider(<Button variant=\"default\">Test Button</Button>);\n      const button = screen.getByRole('button');\n\n      // Should use semantic variables like --primary, --background\n      expect(button).toHaveClass('bg-primary');\n      expect(button).toHaveClass('text-primary-foreground');\n\n      // Should not contain hard-coded hex values\n      const buttonStyles = button.getAttribute('class') || '';\n      expect(buttonStyles).not.toMatch(/#[0-9a-fA-F]{3,6}/);\n    });\n\n    it('maintains consistent spacing with CSS variables', () => {\n      renderWithProvider(<Button size=\"default\">Test</Button>);\n      const button = screen.getByRole('button');\n\n      // Should use Tailwind classes that map to CSS variables\n      expect(button).toHaveClass('px-4', 'py-2');\n    });\n  });\n});"]}