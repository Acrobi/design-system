{"version":3,"file":"input.jsx","sourceRoot":"","sources":["input.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,YAAY,CAAA;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,EAAE,GAAG,EAAqB,MAAM,0BAA0B,CAAA;AACjE,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAA;AAEpC,MAAM,aAAa,GAAG,GAAG,CACvB,+UAA+U,EAC/U;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EACL,4CAA4C;YAC9C,WAAW,EACT,yGAAyG;YAC3G,OAAO,EACL,qDAAqD;YACvD,SAAS,EACP,+FAA+F;SAClG;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,gBAAgB;YACzB,EAAE,EAAE,uBAAuB;YAC3B,EAAE,EAAE,0BAA0B;SAC/B;QACD,KAAK,EAAE;YACL,IAAI,EAAE,2IAA2I;SAClJ;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;QACf,KAAK,EAAE,KAAK;KACb;CACF,CACF,CAAA;AAQD,MAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAC5B,CAAC,EAAuD,EAAE,GAAG,EAAE,EAAE;QAAhE,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,OAAY,EAAP,KAAK,cAArD,qDAAuD,CAAF;IACpD,OAAO,CACL,CAAC,KAAK,CACJ,SAAS,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAClE,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,YAAY,CAAC,CAAC,KAAK,CAAC,CACpB,IAAI,KAAK,CAAC,EACV,CACH,CAAA;AACH,CAAC,CACF,CAAA;AACD,KAAK,CAAC,WAAW,GAAG,OAAO,CAAA;AAE3B,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,CAAA","sourcesContent":["/**\n * @prop {variant} {enum} {default|destructive|outline|secondary|ghost} {default} - The visual style of the input.\n * @prop {size} {enum} {default|sm|lg} {default} - The size of the input.\n * @prop {disabled} {boolean} {false} - Whether the input is disabled.\n * @prop {required} {boolean} {false} - Whether the input is required.\n * @prop {readOnly} {boolean} {false} - Whether the input is read-only.\n * @prop {error} {boolean} {false} - Whether the input has an error state.\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst inputVariants = cva(\n  \"flex w-full rounded-md border border-input bg-background text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-input bg-background text-foreground\",\n        destructive:\n          \"border-destructive bg-background text-destructive-foreground placeholder:text-destructive-foreground/50\",\n        outline:\n          \"border-2 border-input bg-background text-foreground\",\n        secondary:\n          \"border-border bg-secondary text-secondary-foreground placeholder:text-secondary-foreground/70\",\n      },\n      size: {\n        default: \"h-10 px-3 py-2\",\n        sm: \"h-9 px-2 py-1 text-xs\",\n        lg: \"h-11 px-4 py-3 text-base\",\n      },\n      error: {\n        true: \"border-destructive bg-destructive/5 text-destructive-foreground placeholder:text-destructive-foreground/50 focus-visible:ring-destructive\",\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n      error: false,\n    },\n  }\n)\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'>,\n    VariantProps<typeof inputVariants> {\n  error?: boolean\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, variant, size, error, disabled, ...props }, ref) => {\n    return (\n      <input\n        className={cn(inputVariants({ variant, size, error, className }))}\n        ref={ref}\n        disabled={disabled}\n        aria-invalid={error}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input, inputVariants }"]}