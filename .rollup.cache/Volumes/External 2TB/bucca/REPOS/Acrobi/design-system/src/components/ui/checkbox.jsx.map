{"version":3,"file":"checkbox.jsx","sourceRoot":"","sources":["checkbox.tsx"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,YAAY,CAAA;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,KAAK,iBAAiB,MAAM,0BAA0B,CAAA;AAC7D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAA;AACpC,OAAO,EAAE,GAAG,EAAqB,MAAM,0BAA0B,CAAA;AACjE,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAA;AAEpC,MAAM,gBAAgB,GAAG,GAAG,CAC1B,gTAAgT,EAChT;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EACL,6FAA6F;YAC/F,WAAW,EACT,yGAAyG;YAC3G,SAAS,EACP,mGAAmG;YACrG,OAAO,EACL,oGAAoG;SACvG;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,SAAS;YAClB,EAAE,EAAE,SAAS;YACb,EAAE,EAAE,SAAS;SACd;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CACF,CAAA;AAMD,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAG/B,CAAC,EAAsC,EAAE,GAAG,EAAE,EAAE;QAA/C,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,OAAY,EAAP,KAAK,cAApC,gCAAsC,CAAF;IAAY,OAAA,CACjD,CAAC,iBAAiB,CAAC,IAAI,CACrB,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAC9D,IAAI,KAAK,CAAC,CAEV;IAAA,CAAC,iBAAiB,CAAC,SAAS,CAC1B,SAAS,CAAC,CAAC,EAAE,CAAC,+CAA+C,CAAC,CAAC,CAE/D;MAAA,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAC5B;IAAA,EAAE,iBAAiB,CAAC,SAAS,CAC/B;EAAA,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAC1B,CAAA;CAAA,CAAC,CAAA;AACF,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAA;AAEzD,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAA","sourcesContent":["/**\n * @prop {variant} {enum} {default|destructive|outline|secondary|ghost} {default} - The visual style of the checkbox.\n * @prop {size} {enum} {default|sm|lg} {default} - The size of the checkbox.\n * @prop {checked} {boolean} {false} - Whether the checkbox is checked.\n * @prop {disabled} {boolean} {false} - Whether the checkbox is disabled.\n * @prop {required} {boolean} {false} - Whether the checkbox is required.\n * @prop {indeterminate} {boolean} {false} - Whether the checkbox is in an indeterminate state.\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst checkboxVariants = cva(\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-primary data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n        destructive:\n          \"border-destructive data-[state=checked]:bg-destructive data-[state=checked]:text-destructive-foreground\",\n        secondary:\n          \"border-secondary data-[state=checked]:bg-secondary data-[state=checked]:text-secondary-foreground\",\n        outline:\n          \"border-2 border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      },\n      size: {\n        default: \"h-4 w-4\",\n        sm: \"h-3 w-3\",\n        lg: \"h-5 w-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface CheckboxProps\n  extends React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\n    VariantProps<typeof checkboxVariants> {}\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  CheckboxProps\n>(({ className, variant, size, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(checkboxVariants({ variant, size, className }))}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox, checkboxVariants }"]}