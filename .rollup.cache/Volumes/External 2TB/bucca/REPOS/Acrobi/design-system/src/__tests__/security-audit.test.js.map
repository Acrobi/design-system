{"version":3,"file":"security-audit.test.js","sourceRoot":"","sources":["security-audit.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { readFileSync } from 'fs';\nimport { join } from 'path';\n\n// Security audit tests for the design system\ndescribe('Security Audit', () => {\n  const packageJsonPath = join(__dirname, '../../package.json');\n  const packageJson = JSON.parse(readFileSync(packageJsonPath, 'utf-8'));\n\n  describe('Package Security', () => {\n    it('has secure dependencies configuration', () => {\n      // Check for known vulnerable packages\n      const vulnerablePackages = [\n        'lodash',\n        'moment',\n        'request',\n        'node-fetch',\n        'axios' // can be vulnerable in older versions\n      ];\n\n      const dependencies = { ...packageJson.dependencies, ...packageJson.devDependencies };\n\n      Object.keys(dependencies).forEach(dep => {\n        if (vulnerablePackages.includes(dep)) {\n          console.warn(`⚠️  Review dependency: ${dep} - ensure it's the latest secure version`);\n        }\n      });\n    });\n\n    it('does not expose sensitive information in package.json', () => {\n      const sensitiveFields = ['privateKey', 'secret', 'password', 'token', 'key'];\n\n      Object.keys(packageJson).forEach(key => {\n        const lowerKey = key.toLowerCase();\n        const hasSensitiveField = sensitiveFields.some(field =>\n          lowerKey.includes(field)\n        );\n\n        expect(hasSensitiveField).toBe(false);\n      });\n    });\n\n    it('has proper engines field for security', () => {\n      // Should specify minimum Node.js version\n      expect(packageJson.engines).toBeDefined();\n      expect(packageJson.engines.node).toBeDefined();\n\n      const nodeVersion = packageJson.engines.node;\n      const minVersion = parseInt(nodeVersion.replace(/[^\\d]/g, ''));\n      expect(minVersion).toBeGreaterThanOrEqual(18); // Require Node 18+\n    });\n  });\n\n  describe('Content Security Policy', () => {\n    it('does not contain inline scripts in source files', () => {\n      const sourceFiles = [\n        'src/components/ui/button.tsx',\n        'src/components/ui/theme-provider.tsx',\n        'src/components/ui/sensory-provider.tsx',\n        'src/lib/utils.ts'\n      ];\n\n      sourceFiles.forEach(file => {\n        try {\n          const content = readFileSync(join(__dirname, '..', file), 'utf-8');\n\n          // Check for dangerous patterns\n          const dangerousPatterns = [\n            /eval\\(/,\n            /innerHTML\\s*=/,\n            /outerHTML\\s*=/,\n            /document\\.write\\(/,\n            /Function\\(/,\n            /setTimeout\\s*\\(\\s*['\"]/,\n            /setInterval\\s*\\(\\s*['\"]/\n          ];\n\n          dangerousPatterns.forEach(pattern => {\n            expect(content).not.toMatch(pattern);\n          });\n        } catch (error) {\n          // File doesn't exist, skip\n        }\n      });\n    });\n\n    it('uses safe DOM manipulation', () => {\n      const themeProviderContent = readFileSync(\n        join(__dirname, '../components/ui/theme-provider.tsx'),\n        'utf-8'\n      );\n\n      // Should use safe DOM manipulation\n      expect(themeProviderContent).toContain('document.createElement');\n      expect(themeProviderContent).toContain('document.head.appendChild');\n\n      // Should not use innerHTML\n      expect(themeProviderContent).not.toContain('innerHTML');\n    });\n  });\n\n  describe('XSS Prevention', () => {\n    it('does not use dangerouslySetInnerHTML', () => {\n      const sourceFiles = [\n        'src/components/ui/button.tsx',\n        'src/components/ui/theme-provider.tsx',\n        'src/components/ui/sensory-provider.tsx'\n      ];\n\n      sourceFiles.forEach(file => {\n        try {\n          const content = readFileSync(join(__dirname, '..', file), 'utf-8');\n          expect(content).not.toContain('dangerouslySetInnerHTML');\n        } catch (error) {\n          // File doesn't exist, skip\n        }\n      });\n    });\n\n    it('sanitizes user inputs', () => {\n      // Check if components handle props safely\n      const buttonContent = readFileSync(\n        join(__dirname, '../components/ui/button.tsx'),\n        'utf-8'\n      );\n\n      // Should spread props safely\n      expect(buttonContent).toContain('{...props}');\n    });\n  });\n\n  describe('Authentication & Authorization', () => {\n    it('does not contain authentication logic in UI components', () => {\n      const sourceFiles = [\n        'src/components/ui/button.tsx',\n        'src/components/ui/theme-provider.tsx',\n        'src/components/ui/sensory-provider.tsx'\n      ];\n\n      sourceFiles.forEach(file => {\n        try {\n          const content = readFileSync(join(__dirname, '..', file), 'utf-8');\n\n          const authPatterns = [\n            /token/i,\n            /jwt/i,\n            /auth/i,\n            /password/i,\n            /secret/i\n          ];\n\n          authPatterns.forEach(pattern => {\n            // Allow in comments but not in code logic\n            const matches = content.match(pattern);\n            if (matches) {\n              // Check if it's in a comment\n              const lines = content.split('\\n');\n              let inComment = false;\n              lines.forEach((line, index) => {\n                if (line.includes('//') || line.includes('/*')) {\n                  inComment = true;\n                }\n                if (line.includes('*/')) {\n                  inComment = false;\n                }\n\n                if (line.match(pattern) && !inComment && !line.includes('//') && !line.includes('/*')) {\n                  console.warn(`⚠️  Authentication-related code found in ${file}:${index + 1}`);\n                }\n              });\n            }\n          });\n        } catch (error) {\n          // File doesn't exist, skip\n        }\n      });\n    });\n  });\n\n  describe('CSRF Protection', () => {\n    it('does not make unsafe HTTP requests', () => {\n      const sourceFiles = [\n        'src/components/ui/theme-provider.tsx',\n        'src/components/ui/sensory-provider.tsx'\n      ];\n\n      sourceFiles.forEach(file => {\n        try {\n          const content = readFileSync(join(__dirname, '..', file), 'utf-8');\n\n          // Should not contain direct fetch calls without proper headers\n          expect(content).not.toMatch(/fetch\\s*\\(\\s*['\"]/);\n        } catch (error) {\n          // File doesn't exist, skip\n        }\n      });\n    });\n  });\n\n  describe('Dependency Security', () => {\n    it('uses secure versions of key dependencies', () => {\n      const dependencies = packageJson.dependencies;\n\n      // Check for known secure versions\n      if (dependencies.react) {\n        const reactVersion = dependencies.react.replace(/[^\\d.]/g, '');\n        expect(parseFloat(reactVersion)).toBeGreaterThanOrEqual(18.0);\n      }\n\n      if (dependencies['react-dom']) {\n        const reactDomVersion = dependencies['react-dom'].replace(/[^\\d.]/g, '');\n        expect(parseFloat(reactDomVersion)).toBeGreaterThanOrEqual(18.0);\n      }\n    });\n\n    it('has minimal attack surface', () => {\n      const dependencies = Object.keys(packageJson.dependencies);\n\n      // Should not have unnecessary heavy dependencies\n      const heavyDependencies = [\n        'webpack',\n        'babel-core',\n        'gulp',\n        'grunt'\n      ];\n\n      heavyDependencies.forEach(dep => {\n        expect(dependencies).not.toContain(dep);\n      });\n    });\n  });\n\n  describe('File Security', () => {\n    it('does not expose sensitive files', () => {\n      const filesField = packageJson.files || [];\n\n      // Should not include sensitive files\n      const sensitiveFiles = [\n        '.env',\n        '.env.local',\n        '.env.development.local',\n        '.env.test.local',\n        '.env.production.local',\n        '.git',\n        'npm-debug.log*',\n        'yarn-debug.log*',\n        'yarn-error.log*'\n      ];\n\n      sensitiveFiles.forEach(file => {\n        expect(filesField).not.toContain(file);\n      });\n    });\n\n    it('includes necessary files in npm package', () => {\n      const filesField = packageJson.files || [];\n\n      // Should include essential files\n      const requiredFiles = [\n        'src',\n        'dist',\n        'package.json',\n        'README.md'\n      ];\n\n      requiredFiles.forEach(file => {\n        expect(filesField).toContain(file);\n      });\n    });\n  });\n\n  describe('Type Safety Security', () => {\n    it('uses TypeScript for type safety', () => {\n      expect(packageJson.devDependencies).toHaveProperty('typescript');\n    });\n\n    it('has strict TypeScript configuration', () => {\n      try {\n        const tsconfigPath = join(__dirname, '../../tsconfig.json');\n        const tsconfig = JSON.parse(readFileSync(tsconfigPath, 'utf-8'));\n\n        expect(tsconfig.compilerOptions.strict).toBe(true);\n      } catch (error) {\n        // tsconfig might not be readable, but that's a separate issue\n      }\n    });\n  });\n});"]}