{"version":3,"file":"switch.jsx","sourceRoot":"","sources":["switch.tsx"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,YAAY,CAAA;;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B,OAAO,KAAK,gBAAgB,MAAM,wBAAwB,CAAA;AAC1D,OAAO,EAAE,GAAG,EAAqB,MAAM,0BAA0B,CAAA;AACjE,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAA;AAEpC,MAAM,cAAc,GAAG,GAAG,CACxB,oXAAoX,EACpX;IACE,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,OAAO,EACL,iEAAiE;YACnE,WAAW,EACT,qEAAqE;YACvE,OAAO,EACL,iEAAiE;YACnE,OAAO,EACL,iEAAiE;SACpE;QACD,IAAI,EAAE;YACJ,OAAO,EAAE,UAAU;YACnB,EAAE,EAAE,SAAS;YACb,EAAE,EAAE,UAAU;SACf;KACF;IACD,eAAe,EAAE;QACf,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CACF,CAAA;AAED,MAAM,mBAAmB,GAAG,GAAG,CAC7B,oKAAoK,EACpK;IACE,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,iFAAiF;YAC1F,EAAE,EAAE,iFAAiF;YACrF,EAAE,EAAE,iFAAiF;SACtF;KACF;IACD,eAAe,EAAE;QACf,IAAI,EAAE,SAAS;KAChB;CACF,CACF,CAAA;AAMD,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAG7B,CAAC,EAAsC,EAAE,GAAG,EAAE,EAAE;QAA/C,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,OAAY,EAAP,KAAK,cAApC,gCAAsC,CAAF;IACrC,OAAO,CACL,CAAC,gBAAgB,CAAC,IAAI,CACpB,SAAS,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAC5D,IAAI,KAAK,CAAC,CACV,GAAG,CAAC,CAAC,GAAG,CAAC,CAET;MAAA,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EACvE;IAAA,EAAE,gBAAgB,CAAC,IAAI,CAAC,CACzB,CAAA;AACH,CAAC,CAAC,CAAA;AACF,MAAM,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAA;AAEtD,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAA","sourcesContent":["/**\n * @prop {variant} {enum} {default|destructive|outline|secondary|ghost} {default} - The visual style of the switch.\n * @prop {size} {enum} {default|sm|lg} {default} - The size of the switch.\n * @prop {checked} {boolean} {false} - Whether the switch is checked.\n * @prop {disabled} {boolean} {false} - Whether the switch is disabled.\n * @prop {required} {boolean} {false} - Whether the switch is required.\n */\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst switchVariants = cva(\n  \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n        destructive:\n          \"data-[state=checked]:bg-destructive data-[state=unchecked]:bg-input\",\n        success:\n          \"data-[state=checked]:bg-success data-[state=unchecked]:bg-input\",\n        warning:\n          \"data-[state=checked]:bg-warning data-[state=unchecked]:bg-input\",\n      },\n      size: {\n        default: \"h-6 w-11\",\n        sm: \"h-5 w-9\",\n        lg: \"h-7 w-13\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst switchThumbVariants = cva(\n  \"pointer-events-none block rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n  {\n    variants: {\n      size: {\n        default: \"h-5 w-5 data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n        sm: \"h-4 w-4 data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\",\n        lg: \"h-6 w-6 data-[state=checked]:translate-x-6 data-[state=unchecked]:translate-x-0\",\n      },\n    },\n    defaultVariants: {\n      size: \"default\",\n    },\n  }\n)\n\nexport interface SwitchProps\n  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>,\n    VariantProps<typeof switchVariants> {}\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  SwitchProps\n>(({ className, variant, size, ...props }, ref) => {\n  return (\n    <SwitchPrimitives.Root\n      className={cn(switchVariants({ variant, size, className }))}\n      {...props}\n      ref={ref}\n    >\n      <SwitchPrimitives.Thumb className={cn(switchThumbVariants({ size }))} />\n    </SwitchPrimitives.Root>\n  )\n})\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch, switchVariants }"]}