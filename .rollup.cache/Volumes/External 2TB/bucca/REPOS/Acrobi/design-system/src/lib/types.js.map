{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"AAAA;;;;;GAKG","sourcesContent":["/**\n * Architectural Standards: Component Types & Interfaces\n *\n * This file defines the core types and interfaces for the Acrobi Design System\n * following strict architectural standards with no hard-coded styles.\n */\n\n// Core size primitive system following the 5-point scale\nexport type SizePrimitive = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\n// Extended size system for components that need more granularity\nexport type ExtendedSizePrimitive = SizePrimitive | '2xs' | '2xl' | '3xl';\n\n// Component naming convention types\nexport type ButtonVariant = 'primary' | 'secondary' | 'destructive' | 'outline' | 'ghost' | 'link';\nexport type LabelVariant = 'default' | 'required' | 'optional' | 'error';\nexport type IconVariant = 'default' | 'button' | 'input' | 'standalone';\n\n// Component API naming conventions\nexport interface ButtonAPI {\n  btnVariant?: ButtonVariant;\n  btnSize?: SizePrimitive;\n  btnDisabled?: boolean;\n  btnLoading?: boolean;\n  btnLeftIcon?: string;\n  btnRightIcon?: string;\n}\n\nexport interface LabelAPI {\n  lblVariant?: LabelVariant;\n  lblSize?: SizePrimitive;\n  lblRequired?: boolean;\n  lblOptional?: boolean;\n  lblError?: boolean;\n}\n\nexport interface IconAPI {\n  icnVariant?: IconVariant;\n  icnSize?: SizePrimitive;\n  icnRotated?: boolean;\n  icnAnimated?: boolean;\n}\n\n// Controller pattern interfaces\nexport interface ComponentController<T = any> {\n  state: T;\n  actions: {\n    update: (updates: Partial<T>) => void;\n    reset: () => void;\n  };\n  hooks: {\n    onChange?: (state: T) => void;\n    onValidate?: (state: T) => boolean;\n  };\n}\n\n// Size mapping interface for consistent spacing\nexport interface SizeMapping {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n}\n\n// Component variant configuration interface\nexport interface VariantConfig<T = string> {\n  [key: string]: T;\n}\n\n// Architectural compliance metadata\nexport interface ArchitecturalMetadata {\n  componentType: 'atomic' | 'molecular' | 'organism' | 'template' | 'page';\n  hasHardcodedStyles: boolean;\n  followsNamingConvention: boolean;\n  usesSizePrimitives: boolean;\n  hasControllerPattern: boolean;\n  lastReviewed: Date;\n}"]}