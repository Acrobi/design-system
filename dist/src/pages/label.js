import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Label } from '../components/ui/label';
import { Button } from '../components/ui/button';
export default function LabelTestPage() {
    return (_jsxs("div", { className: "container mx-auto p-8 space-y-8", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h1", { className: "text-4xl font-bold", children: "Label Component Tests" }), _jsx("p", { className: "text-muted-foreground", children: "Comprehensive testing of label configurations and accessibility" })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Basic Labels" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "basic-input", children: "Simple Label" }), _jsx("input", { id: "basic-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Type something..." })] }), _jsxs("div", { children: [_jsx(Label, { children: "Label without htmlFor" }), _jsx("p", { className: "text-sm text-muted-foreground mt-1", children: "This label is not associated with a specific form control" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Labels with Icons" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "email-input", icon: "user", children: "Email Address" }), _jsx("input", { id: "email-input", type: "email", className: "mt-1 w-full p-2 border rounded-md", placeholder: "user@example.com" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "password-input", icon: "eye-closed", children: "Password" }), _jsx("input", { id: "password-input", type: "password", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Enter password" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "search-input", icon: "search", children: "Search" }), _jsx("input", { id: "search-input", type: "search", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Search items..." })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "file-input", icon: "upload", children: "Upload File" }), _jsx("input", { id: "file-input", type: "file", className: "mt-1 w-full p-2 border rounded-md" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Label Styling" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "styled-input", className: "text-primary", children: "Primary Label" }), _jsx("input", { id: "styled-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Styled label example" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "large-input", className: "text-lg font-semibold", children: "Large Label" }), _jsx("input", { id: "large-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Large label example" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "custom-input", className: "text-blue-600 uppercase tracking-wide", children: "Custom Styled Label" }), _jsx("input", { id: "custom-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", placeholder: "Custom styled label" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Form Layout Examples" }), _jsxs("div", { className: "space-y-4 p-6 border rounded-lg", children: [_jsx("h3", { className: "text-lg font-medium", children: "Vertical Form Layout" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "name", icon: "user", children: "Full Name" }), _jsx("input", { id: "name", type: "text", className: "mt-1 w-full p-2 border rounded-md", placeholder: "John Doe" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "email", icon: "mail", children: "Email Address" }), _jsx("input", { id: "email", type: "email", className: "mt-1 w-full p-2 border rounded-md", placeholder: "john@example.com" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "message", icon: "edit", children: "Message" }), _jsx("textarea", { id: "message", className: "mt-1 w-full p-2 border rounded-md", rows: 4, placeholder: "Your message here..." })] })] })] }), _jsxs("div", { className: "space-y-4 p-6 border rounded-lg", children: [_jsx("h3", { className: "text-lg font-medium", children: "Horizontal Form Layout" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Label, { htmlFor: "horizontal-name", icon: "user", className: "min-w-[120px]", children: "Name" }), _jsx("input", { id: "horizontal-name", type: "text", className: "flex-1 p-2 border rounded-md", placeholder: "John Doe" })] }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Label, { htmlFor: "horizontal-email", icon: "mail", className: "min-w-[120px]", children: "Email" }), _jsx("input", { id: "horizontal-email", type: "email", className: "flex-1 p-2 border rounded-md", placeholder: "john@example.com" })] }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Label, { htmlFor: "horizontal-phone", icon: "phone", className: "min-w-[120px]", children: "Phone" }), _jsx("input", { id: "horizontal-phone", type: "tel", className: "flex-1 p-2 border rounded-md", placeholder: "+1 (555) 123-4567" })] })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Checkbox and Radio Groups" }), _jsxs("div", { className: "space-y-3", children: [_jsx(Label, { icon: "heart", children: "Preferences" }), _jsxs("div", { className: "space-y-2 ml-6", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "checkbox", id: "newsletter" }), _jsx(Label, { htmlFor: "newsletter", className: "font-normal", children: "Subscribe to newsletter" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "checkbox", id: "notifications" }), _jsx(Label, { htmlFor: "notifications", className: "font-normal", children: "Enable notifications" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "checkbox", id: "updates" }), _jsx(Label, { htmlFor: "updates", className: "font-normal", children: "Product updates" })] })] })] }), _jsxs("div", { className: "space-y-3", children: [_jsx(Label, { icon: "info", children: "Contact Method" }), _jsxs("div", { className: "space-y-2 ml-6", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "radio", name: "contact", id: "contact-email" }), _jsx(Label, { htmlFor: "contact-email", className: "font-normal", children: "Email" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "radio", name: "contact", id: "contact-phone" }), _jsx(Label, { htmlFor: "contact-phone", className: "font-normal", children: "Phone" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("input", { type: "radio", name: "contact", id: "contact-mail" }), _jsx(Label, { htmlFor: "contact-mail", className: "font-normal", children: "Mail" })] })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Accessibility Testing" }), _jsxs("div", { className: "space-y-4", children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Labels should be properly associated with form controls for screen readers" }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "accessible-input", icon: "info", children: "Accessible Input" }), _jsx("input", { id: "accessible-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", "aria-describedby": "input-help", placeholder: "This input has proper accessibility" }), _jsx("p", { id: "input-help", className: "text-sm text-muted-foreground mt-1", children: "This help text is associated with the input above" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "required-input", icon: "warning", children: "Required Field" }), _jsx("input", { id: "required-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", required: true, "aria-required": "true", placeholder: "This field is required" }), _jsx("p", { className: "text-sm text-destructive mt-1", children: "* This field is required" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Interactive Examples" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "interactive-input", icon: "edit", children: "Interactive Label Test" }), _jsx("input", { id: "interactive-input", type: "text", className: "mt-1 w-full p-2 border rounded-md", onChange: (e) => {
                                            const label = document.querySelector('[for="interactive-input"]');
                                            if (label) {
                                                label.textContent = e.target.value ? `âœ“ ${e.target.value}` : 'Interactive Label Test';
                                            }
                                        }, placeholder: "Type to change the label text" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "toggle-input", icon: "eye-open", children: "Show/Hide Password" }), _jsxs("div", { className: "flex gap-2 mt-1", children: [_jsx("input", { id: "toggle-input", type: "password", className: "flex-1 p-2 border rounded-md", defaultValue: "secret-password" }), _jsx(Button, { variant: "outline", onClick: () => {
                                                    const input = document.getElementById('toggle-input');
                                                    const label = document.querySelector('[for="toggle-input"]');
                                                    if (input.type === 'password') {
                                                        input.type = 'text';
                                                        label.innerHTML = '<Icon metaphor="eye-closed" className="mr-2"></Icon>Hide Password';
                                                    }
                                                    else {
                                                        input.type = 'password';
                                                        label.innerHTML = '<Icon metaphor="eye-open" className="mr-2"></Icon>Show Password';
                                                    }
                                                }, children: "Toggle" })] })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Custom Icon Combinations" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx(Label, { htmlFor: "success-input", icon: "success", className: "text-green-600", children: "Successful Input" }), _jsx("input", { id: "success-input", type: "text", className: "mt-1 w-full p-2 border rounded-md border-green-300", defaultValue: "Valid data" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "error-input", icon: "error", className: "text-red-600", children: "Error Input" }), _jsx("input", { id: "error-input", type: "text", className: "mt-1 w-full p-2 border rounded-md border-red-300", defaultValue: "Invalid data" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "warning-input", icon: "warning", className: "text-yellow-600", children: "Warning Input" }), _jsx("input", { id: "warning-input", type: "text", className: "mt-1 w-full p-2 border rounded-md border-yellow-300", defaultValue: "Needs attention" })] }), _jsxs("div", { children: [_jsx(Label, { htmlFor: "info-input", icon: "info", className: "text-blue-600", children: "Info Input" }), _jsx("input", { id: "info-input", type: "text", className: "mt-1 w-full p-2 border rounded-md border-blue-300", defaultValue: "Additional info" })] })] })] })] }));
}
//# sourceMappingURL=label.js.map