import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Icon } from '../components/ui/icon';
import { iconMetaphors } from '../lib/icon-metaphors';
export default function IconTestPage() {
    const [selectedIcon, setSelectedIcon] = useState(null);
    const [iconSize, setIconSize] = useState('4');
    const [searchTerm, setSearchTerm] = useState('');
    const filteredIcons = iconMetaphors.filter(icon => icon.toLowerCase().includes(searchTerm.toLowerCase()));
    return (_jsxs("div", { className: "container mx-auto p-8 space-y-8", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h1", { className: "text-4xl font-bold", children: "Icon Component Tests" }), _jsx("p", { className: "text-muted-foreground", children: "Comprehensive testing of all icon metaphors and configurations" })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Icon Sizes" }), _jsxs("div", { className: "flex items-center gap-8", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-3 w-3" }), _jsx("span", { className: "text-sm", children: "3 (12px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-4 w-4" }), _jsx("span", { className: "text-sm", children: "4 (16px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-5 w-5" }), _jsx("span", { className: "text-sm", children: "5 (20px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-6 w-6" }), _jsx("span", { className: "text-sm", children: "6 (24px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-8 w-8" }), _jsx("span", { className: "text-sm", children: "8 (32px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-10 w-10" }), _jsx("span", { className: "text-sm", children: "10 (40px)" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Icon, { metaphor: "home", className: "h-12 w-12" }), _jsx("span", { className: "text-sm", children: "12 (48px)" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Icon Colors" }), _jsxs("div", { className: "flex items-center gap-6", children: [_jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-foreground" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-primary" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-secondary" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-destructive" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-muted-foreground" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-accent-foreground" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-blue-500" }), _jsx(Icon, { metaphor: "star-filled", className: "h-6 w-6 text-green-500" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Interactive Icon Selector" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium mb-2", children: "Icon Size:" }), _jsxs("select", { value: iconSize, onChange: (e) => setIconSize(e.target.value), className: "p-2 border rounded-md", children: [_jsx("option", { value: "3", children: "3 (12px)" }), _jsx("option", { value: "4", children: "4 (16px)" }), _jsx("option", { value: "5", children: "5 (20px)" }), _jsx("option", { value: "6", children: "6 (24px)" }), _jsx("option", { value: "8", children: "8 (32px)" }), _jsx("option", { value: "10", children: "10 (40px)" }), _jsx("option", { value: "12", children: "12 (48px)" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium mb-2", children: "Search Icons:" }), _jsx("input", { type: "text", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), placeholder: "Search for icons...", className: "w-full p-2 border rounded-md" })] }), _jsx("div", { className: "p-8 border-2 border-dashed border-muted-foreground/25 rounded-lg", children: selectedIcon ? (_jsxs("div", { className: "flex flex-col items-center space-y-2", children: [_jsx(Icon, { metaphor: selectedIcon, className: `h-${iconSize} w-${iconSize}` }), _jsx("p", { className: "text-sm font-mono", children: selectedIcon })] })) : (_jsx("p", { className: "text-center text-muted-foreground", children: "Click an icon below to see it displayed here" })) })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("h2", { className: "text-2xl font-semibold", children: ["All Available Icons (", filteredIcons.length, ")"] }), _jsx("div", { className: "grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 lg:grid-cols-12 gap-4 p-6 border rounded-lg", children: filteredIcons.map((metaphor) => (_jsxs("button", { onClick: () => setSelectedIcon(metaphor), className: `flex flex-col items-center justify-center p-3 rounded-md border transition-colors hover:bg-accent hover:text-accent-foreground ${selectedIcon === metaphor ? 'bg-primary text-primary-foreground' : 'bg-background'}`, title: metaphor, children: [_jsx(Icon, { metaphor: metaphor, className: `h-6 w-6 mb-1` }), _jsx("span", { className: "text-xs text-center break-all", children: metaphor })] }, metaphor))) })] }), _jsxs("div", { className: "space-y-6", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Common Icon Groups" }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "Navigation" }), _jsx("div", { className: "flex gap-4", children: ['chevron-left', 'chevron-right', 'chevron-up', 'chevron-down', 'arrow-left', 'arrow-right', 'home', 'menu'].map(metaphor => (_jsxs("div", { className: "flex items-center gap-2 p-2 border rounded", children: [_jsx(Icon, { metaphor: metaphor, className: "h-4 w-4" }), _jsx("span", { className: "text-sm", children: metaphor })] }, metaphor))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "Actions" }), _jsx("div", { className: "flex flex-wrap gap-4", children: ['add', 'remove', 'delete', 'edit', 'save', 'close', 'copy', 'send'].map(metaphor => (_jsxs("div", { className: "flex items-center gap-2 p-2 border rounded", children: [_jsx(Icon, { metaphor: metaphor, className: "h-4 w-4" }), _jsx("span", { className: "text-sm", children: metaphor })] }, metaphor))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "Status" }), _jsx("div", { className: "flex flex-wrap gap-4", children: ['success', 'warning', 'error', 'info', 'help'].map(metaphor => (_jsxs("div", { className: "flex items-center gap-2 p-2 border rounded", children: [_jsx(Icon, { metaphor: metaphor, className: "h-4 w-4" }), _jsx("span", { className: "text-sm", children: metaphor })] }, metaphor))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h3", { className: "text-lg font-medium", children: "UI Elements" }), _jsx("div", { className: "flex flex-wrap gap-4", children: ['user', 'users', 'settings', 'bell', 'search', 'upload', 'download', 'folder'].map(metaphor => (_jsxs("div", { className: "flex items-center gap-2 p-2 border rounded", children: [_jsx(Icon, { metaphor: metaphor, className: "h-4 w-4" }), _jsx("span", { className: "text-sm", children: metaphor })] }, metaphor))) })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Accessibility Testing" }), _jsxs("div", { className: "space-y-4", children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Icons should have appropriate labels and descriptions" }), _jsxs("div", { className: "flex gap-4", children: [_jsx(Icon, { metaphor: "settings", "aria-label": "Settings", className: "h-6 w-6" }), _jsx(Icon, { metaphor: "info", "aria-describedby": "info-help", className: "h-6 w-6" }), _jsx(Icon, { metaphor: "external-link", "aria-label": "External link", className: "h-6 w-6" })] }), _jsx("p", { id: "info-help", className: "text-sm text-muted-foreground", children: "Information icon provides additional help" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h2", { className: "text-2xl font-semibold", children: "Invalid Icon Handling" }), _jsxs("div", { className: "space-y-2", children: [_jsx("p", { className: "text-sm text-muted-foreground", children: "Invalid icon metaphors should fall back to placeholder icon" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Icon, { metaphor: "placeholder", className: "h-6 w-6" }), _jsx("span", { className: "text-sm", children: "Fallback placeholder for invalid metaphors" })] })] })] })] }));
}
//# sourceMappingURL=icon.js.map