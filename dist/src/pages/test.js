import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from '../components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card';
import { SensoryProvider } from '../components/ui/sensory-provider';
import { Spinner } from '../components/ui/spinner';
import { Icon } from '../components/ui/icons';
// Web Audio API sound function for sensory feedback
const playSound = (frequency, duration, type = 'sine') => {
    try {
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
        const oscillator = audioContext.createOscillator();
        const gainNode = audioContext.createGain();
        oscillator.connect(gainNode);
        gainNode.connect(audioContext.destination);
        oscillator.frequency.value = frequency;
        oscillator.type = type;
        gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
        gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);
        oscillator.start(audioContext.currentTime);
        oscillator.stop(audioContext.currentTime + duration);
    }
    catch (error) {
        // Fallback: console log if audio is not supported
        console.log('ðŸ”Š Audio feedback:', { frequency, duration, type });
    }
};
export default function TestPage() {
    const [isLoading, setIsLoading] = useState(false);
    const handleLoadingClick = () => {
        setIsLoading(true);
        setTimeout(() => setIsLoading(false), 2000);
    };
    return (_jsx(SensoryProvider, { children: _jsx("div", { className: "min-h-screen bg-background text-foreground p-8", children: _jsxs("div", { className: "max-w-6xl mx-auto space-y-8", children: [_jsxs("div", { className: "text-center space-y-4", children: [_jsx("h1", { className: "text-4xl font-bold", children: "Complete Button Test Suite" }), _jsx("p", { className: "text-muted-foreground text-lg", children: "All button variants, sizes, and states from shadcn/ui documentation" })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Button Variants" }), _jsx(CardDescription, { children: "Test different button styles and theme switching" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { variant: "default", onClick: () => playSound(440, 0.1), children: "Default" }), _jsx(Button, { variant: "destructive", onClick: () => playSound(330, 0.1), children: "Destructive" }), _jsx(Button, { variant: "outline", onClick: () => playSound(550, 0.1), children: "Outline" }), _jsx(Button, { variant: "secondary", onClick: () => playSound(660, 0.1), children: "Secondary" }), _jsx(Button, { variant: "ghost", onClick: () => playSound(770, 0.1), children: "Ghost" }), _jsx(Button, { variant: "link", onClick: () => playSound(880, 0.1), children: "Link" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Button Sizes" }), _jsx(CardDescription, { children: "Different button sizes with click feedback" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Button, { size: "sm", onClick: () => playSound(440, 0.1), children: "Small" }), _jsx(Button, { size: "default", onClick: () => playSound(550, 0.1), children: "Default" }), _jsx(Button, { size: "lg", onClick: () => playSound(660, 0.1), children: "Large" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Icon Buttons" }), _jsx(CardDescription, { children: "Buttons with icons using the Icon Metaphor System" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Icon Only" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { size: "icon", onClick: () => playSound(440, 0.1), children: _jsx(Icon, { metaphor: "add" }) }), _jsx(Button, { size: "icon", variant: "outline", onClick: () => playSound(550, 0.1), children: _jsx(Icon, { metaphor: "download" }) }), _jsx(Button, { size: "icon", variant: "destructive", onClick: () => playSound(330, 0.1), children: _jsx(Icon, { metaphor: "delete" }) }), _jsx(Button, { size: "icon", variant: "secondary", onClick: () => playSound(660, 0.1), children: _jsx(Icon, { metaphor: "chevron-right" }) })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Icon with Text" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { onClick: () => playSound(440, 0.1), children: [_jsx(Icon, { metaphor: "add", className: "mr-2 h-4 w-4" }), "Add Item"] }), _jsxs(Button, { variant: "outline", onClick: () => playSound(550, 0.1), children: [_jsx(Icon, { metaphor: "download", className: "mr-2 h-4 w-4" }), "Download"] }), _jsxs(Button, { variant: "destructive", onClick: () => playSound(330, 0.1), children: [_jsx(Icon, { metaphor: "delete", className: "mr-2 h-4 w-4" }), "Delete"] }), _jsxs(Button, { variant: "secondary", onClick: () => playSound(660, 0.1), children: [_jsx(Icon, { metaphor: "success", className: "mr-2 h-4 w-4" }), "Success"] })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Loading States" }), _jsx(CardDescription, { children: "Buttons with loading spinners and states" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { disabled: true, children: [_jsx(Spinner, { className: "mr-2 h-4 w-4" }), "Loading..."] }), _jsxs(Button, { variant: "outline", disabled: true, children: [_jsx(Spinner, { className: "mr-2 h-4 w-4" }), "Please wait"] }), _jsxs(Button, { variant: "secondary", disabled: true, children: [_jsx(Spinner, { className: "mr-2 h-4 w-4" }), "Processing"] }), _jsx(Button, { variant: isLoading ? "secondary" : "default", onClick: () => {
                                                playSound(550, 0.1);
                                                handleLoadingClick();
                                            }, disabled: isLoading, children: isLoading ? (_jsxs(_Fragment, { children: [_jsx(Spinner, { className: "mr-2 h-4 w-4" }), "Loading..."] })) : (_jsxs(_Fragment, { children: [_jsx(Icon, { metaphor: "add", className: "mr-2 h-4 w-4" }), "Click to Load"] })) })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Disabled States" }), _jsx(CardDescription, { children: "Disabled buttons with different variants" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { disabled: true, children: "Disabled Default" }), _jsx(Button, { variant: "destructive", disabled: true, children: "Disabled Destructive" }), _jsx(Button, { variant: "outline", disabled: true, children: "Disabled Outline" }), _jsx(Button, { variant: "secondary", disabled: true, children: "Disabled Secondary" }), _jsx(Button, { variant: "ghost", disabled: true, children: "Disabled Ghost" }), _jsx(Button, { size: "icon", disabled: true, children: _jsx(Icon, { metaphor: "add" }) })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "As Child Pattern" }), _jsx(CardDescription, { children: "Buttons rendered as other elements" })] }), _jsx(CardContent, { className: "space-y-6", children: _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { asChild: true, onClick: () => playSound(440, 0.1), children: _jsxs("a", { href: "#", onClick: (e) => e.preventDefault(), children: [_jsx(Icon, { metaphor: "success", className: "mr-2 h-4 w-4" }), "Link Button"] }) }), _jsx(Button, { asChild: true, variant: "outline", onClick: () => playSound(550, 0.1), children: _jsxs("label", { children: [_jsx(Icon, { metaphor: "upload", className: "mr-2 h-4 w-4" }), "Upload File", _jsx("input", { type: "file", className: "hidden" })] }) })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Sensory Feedback" }), _jsx(CardDescription, { children: "Enhanced feedback with audio, visual, and haptic responses" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Audio Feedback" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { onClick: () => playSound(261.63, 0.2, 'sine'), children: "Low Tone" }), _jsx(Button, { onClick: () => playSound(523.25, 0.2, 'sine'), children: "Mid Tone" }), _jsx(Button, { onClick: () => playSound(1046.50, 0.2, 'sine'), children: "High Tone" }), _jsx(Button, { onClick: () => playSound(440, 0.1, 'square'), children: "Square Wave" }), _jsx(Button, { onClick: () => playSound(440, 0.1, 'sawtooth'), children: "Sawtooth" }), _jsx(Button, { onClick: () => playSound(440, 0.1, 'triangle'), children: "Triangle" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Interactive Feedback" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { onClick: () => {
                                                            playSound(440, 0.1);
                                                            if (navigator.vibrate) {
                                                                navigator.vibrate(50);
                                                            }
                                                        }, children: [_jsx(Icon, { metaphor: "star-filled", className: "mr-2 h-4 w-4 relative z-10" }), "Haptic + Sound"] }), _jsxs(Button, { variant: "outline", onClick: () => {
                                                            playSound(880, 0.15);
                                                            if (navigator.vibrate) {
                                                                navigator.vibrate([50, 30, 50]);
                                                            }
                                                        }, children: [_jsx(Icon, { metaphor: "notification", className: "mr-2 h-4 w-4 relative z-10" }), "Double Pulse"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Alert Feedback" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { variant: "destructive", onClick: () => {
                                                            playSound(220, 0.3, 'sawtooth');
                                                            if (navigator.vibrate) {
                                                                navigator.vibrate(100);
                                                            }
                                                        }, children: [_jsx(Icon, { metaphor: "warning", className: "mr-2 h-4 w-4" }), "Error Alert"] }), _jsxs(Button, { onClick: () => {
                                                            playSound(659.25, 0.2);
                                                            if (navigator.vibrate) {
                                                                navigator.vibrate(50);
                                                            }
                                                        }, children: [_jsx(Icon, { metaphor: "heart", className: "mr-2 h-4 w-4" }), "Success"] })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Size Variations with Icons" }), _jsx(CardDescription, { children: "Different icon sizes with buttons" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Icon Sizes" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsxs(Button, { size: "sm", onClick: () => playSound(440, 0.1), children: [_jsx(Icon, { metaphor: "add", className: "mr-2 h-3 w-3" }), "Small"] }), _jsxs(Button, { size: "default", onClick: () => playSound(550, 0.1), children: [_jsx(Icon, { metaphor: "add", className: "mr-2 h-4 w-4" }), "Default"] }), _jsxs(Button, { size: "lg", onClick: () => playSound(660, 0.1), children: [_jsx(Icon, { metaphor: "add", className: "mr-2 h-5 w-5" }), "Large"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Icon Only Sizes" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx(Button, { size: "sm", onClick: () => playSound(440, 0.1), children: _jsx(Icon, { metaphor: "settings", size: "sm" }) }), _jsx(Button, { size: "default", onClick: () => playSound(550, 0.1), children: _jsx(Icon, { metaphor: "settings", size: "default" }) }), _jsx(Button, { size: "lg", onClick: () => playSound(660, 0.1), children: _jsx(Icon, { metaphor: "settings", size: "lg" }) })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Special Combinations" }), _jsx(CardDescription, { children: "Advanced button patterns and combinations" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Icon Groups" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { onClick: () => playSound(440, 0.1), children: [_jsx(Icon, { metaphor: "user", className: "mr-2 h-4 w-4" }), "Profile"] }), _jsxs(Button, { variant: "outline", onClick: () => playSound(550, 0.1), children: [_jsx(Icon, { metaphor: "users", className: "mr-2 h-4 w-4" }), "Team"] }), _jsxs(Button, { variant: "secondary", onClick: () => playSound(660, 0.1), children: [_jsx(Icon, { metaphor: "delete", className: "mr-2 h-4 w-4" }), "Remove"] }), _jsxs(Button, { variant: "ghost", onClick: () => playSound(770, 0.1), children: [_jsx(Icon, { metaphor: "edit", className: "mr-2 h-4 w-4" }), "Edit"] }), _jsxs(Button, { variant: "outline", onClick: () => playSound(880, 0.1), children: [_jsx(Icon, { metaphor: "close", className: "mr-2 h-4 w-4" }), "Cancel"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "External Links" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { asChild: true, onClick: () => playSound(440, 0.1), children: _jsxs("a", { href: "#", onClick: (e) => e.preventDefault(), children: ["Documentation", _jsx(Icon, { metaphor: "external-link", className: "ml-2 h-4 w-4" })] }) }), _jsx(Button, { variant: "outline", asChild: true, onClick: () => playSound(550, 0.1), children: _jsxs("a", { href: "#", onClick: (e) => e.preventDefault(), children: ["Download PDF", _jsx(Icon, { metaphor: "download", className: "ml-2 h-4 w-4" })] }) })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Motion & Animations" }), _jsx(CardDescription, { children: "Buttons with different animation and motion effects" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Hover Animations" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { className: "transition-all duration-300 hover:scale-105 hover:shadow-lg", onClick: () => playSound(440, 0.1), children: "Scale Up" }), _jsx(Button, { variant: "outline", className: "transition-all duration-300 hover:-translate-y-1 hover:shadow-lg", onClick: () => playSound(550, 0.1), children: "Lift Up" }), _jsx(Button, { variant: "secondary", className: "transition-all duration-300 hover:rotate-3 hover:scale-110", onClick: () => playSound(660, 0.1), children: "Wiggle" }), _jsx(Button, { variant: "ghost", className: "transition-all duration-300 hover:bg-gradient-to-r hover:from-primary hover:to-primary-foreground hover:text-background", onClick: () => playSound(770, 0.1), children: "Gradient" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Active State Animations" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { className: "transition-all duration-200 active:scale-95 active:shadow-inner", onClick: () => playSound(440, 0.1), children: "Click Press" }), _jsx(Button, { variant: "outline", className: "transition-all duration-200 active:rotate-12 active:scale-90", onClick: () => playSound(550, 0.1), children: "Spin Click" }), _jsx(Button, { variant: "secondary", className: "transition-all duration-300 active:bg-destructive active:text-destructive-foreground", onClick: () => playSound(660, 0.1), children: "Color Change" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Loading Animations" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { className: "relative overflow-hidden", onClick: () => playSound(440, 0.1), children: [_jsx("span", { className: "relative z-10", children: "Ripple Effect" }), _jsx("div", { className: "absolute inset-0 bg-primary/20 transform scale-0 animate-ping" })] }), _jsx(Button, { variant: "outline", className: "animate-pulse hover:animate-none", onClick: () => playSound(550, 0.1), children: "Pulse" }), _jsx(Button, { variant: "secondary", className: "animate-bounce hover:animate-none", onClick: () => playSound(660, 0.1), children: "Bounce" })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Advanced Haptic Feedback" }), _jsx(CardDescription, { children: "Comprehensive haptic patterns for different interactions" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Success Patterns" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { onClick: () => {
                                                            playSound(523.25, 0.1);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(50);
                                                        }, children: [_jsx(Icon, { metaphor: "success", className: "mr-2 h-4 w-4" }), "Short Success"] }), _jsxs(Button, { variant: "outline", onClick: () => {
                                                            playSound(659.25, 0.15);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([50, 30, 50]);
                                                        }, children: [_jsx(Icon, { metaphor: "success", className: "mr-2 h-4 w-4" }), "Double Tap"] }), _jsxs(Button, { variant: "secondary", onClick: () => {
                                                            playSound(783.99, 0.2);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([30, 20, 30, 20, 30]);
                                                        }, children: [_jsx(Icon, { metaphor: "success", className: "mr-2 h-4 w-4" }), "Triple Pulse"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Warning Patterns" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { variant: "outline", onClick: () => {
                                                            playSound(329.63, 0.2);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([100, 50, 100]);
                                                        }, children: [_jsx(Icon, { metaphor: "warning", className: "mr-2 h-4 w-4" }), "Warning Pulse"] }), _jsxs(Button, { onClick: () => {
                                                            playSound(293.66, 0.3);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(200);
                                                        }, children: [_jsx(Icon, { metaphor: "warning", className: "mr-2 h-4 w-4" }), "Long Vibrate"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Error Patterns" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { variant: "destructive", onClick: () => {
                                                            playSound(174.61, 0.3);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([50, 100, 50, 100, 50]);
                                                        }, children: [_jsx(Icon, { metaphor: "error", className: "mr-2 h-4 w-4" }), "Error Shake"] }), _jsxs(Button, { variant: "outline", onClick: () => {
                                                            playSound(220, 0.25);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([150, 100, 150]);
                                                        }, children: [_jsx(Icon, { metaphor: "error", className: "mr-2 h-4 w-4" }), "Strong Alert"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Notification Patterns" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsxs(Button, { variant: "ghost", onClick: () => {
                                                            playSound(880, 0.08);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(20);
                                                        }, children: [_jsx(Icon, { metaphor: "notification", className: "mr-2 h-4 w-4" }), "Light Tap"] }), _jsxs(Button, { variant: "ghost", onClick: () => {
                                                            playSound(698.46, 0.1);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([25, 15, 25]);
                                                        }, children: [_jsx(Icon, { metaphor: "notification", className: "mr-2 h-4 w-4" }), "Gentle Nudge"] }), _jsxs(Button, { variant: "ghost", onClick: () => {
                                                            playSound(440, 0.12);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([40, 25, 40, 25]);
                                                        }, children: [_jsx(Icon, { metaphor: "notification", className: "mr-2 h-4 w-4" }), "Rhythm"] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium", children: "Interactive Patterns" }), _jsxs("div", { className: "flex flex-wrap gap-4", children: [_jsx(Button, { onClick: () => {
                                                            playSound(523.25, 0.05);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(10);
                                                        }, onMouseEnter: () => {
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(5);
                                                        }, children: "Hover + Click" }), _jsx(Button, { variant: "outline", onClick: () => {
                                                            playSound(587.33, 0.08);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([15, 10, 15]);
                                                        }, onMouseDown: () => {
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(25);
                                                        }, onMouseUp: () => {
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(15);
                                                        }, children: "Press Sensation" }), _jsx(Button, { variant: "secondary", onClick: () => {
                                                            playSound(659.25, 0.1);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate([30, 20, 30, 20, 30, 20]);
                                                        }, onMouseEnter: () => {
                                                            playSound(440, 0.03);
                                                            if (navigator.vibrate)
                                                                navigator.vibrate(8);
                                                        }, children: "Rich Interaction" })] })] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Theme Testing" }), _jsx(CardDescription, { children: "Use the theme selector in the navigation bar" })] }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "space-y-2", children: [_jsxs("p", { className: "text-sm", children: ["\uD83C\uDFA8 ", _jsx("strong", { children: "Color Themes:" }), " Use the theme selector in navigation to switch between:"] }), _jsxs("ul", { className: "text-sm space-y-1 ml-4", children: [_jsx("li", { children: "\u2022 Base (shadcn/ui default theme)" }), _jsx("li", { children: "\u2022 Blue (Professional blue primary)" }), _jsx("li", { children: "\u2022 Purple (Creative purple primary)" }), _jsx("li", { children: "\u2022 Green (Natural green primary)" }), _jsx("li", { children: "\u2022 Orange (Energetic orange primary)" }), _jsx("li", { children: "\u2022 Red (Bold red primary)" })] }), _jsxs("p", { className: "text-sm", children: ["\uD83C\uDF19 ", _jsx("strong", { children: "Dark Mode:" }), " Click the sun/moon/system icon to toggle light/dark/system modes"] }), _jsxs("p", { className: "text-sm", children: ["\uD83D\uDD0A ", _jsx("strong", { children: "Audio Feedback:" }), " Click any button to hear audio feedback"] }), _jsxs("p", { className: "text-sm", children: ["\uD83D\uDCF3 ", _jsx("strong", { children: "Haptic Feedback:" }), " Some buttons provide vibration feedback on mobile devices"] }), _jsxs("p", { className: "text-sm", children: ["\uD83C\uDFAF ", _jsx("strong", { children: "Icon System:" }), " All icons use the Icon Metaphor System with Lucide icons"] }), _jsxs("p", { className: "text-sm", children: ["\uD83C\uDFAC ", _jsx("strong", { children: "Motion & Animation:" }), " Buttons include various animation and motion effects"] })] }) })] })] }) }) }));
}
//# sourceMappingURL=test.js.map